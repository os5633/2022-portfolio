"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildStopCommand = void 0;
const commander_1 = require("commander");
const kleur_1 = require("kleur");
const getDocker_1 = __importDefault(require("./getDocker"));
const getRunnerContainer_1 = __importDefault(require("./getRunnerContainer"));
const buildStopCommand = () => {
    const command = new commander_1.Command("stop")
        .storeOptionsAsProperties(false)
        .description("‚ú® Stop a running QA Wolf runner service")
        .action(async () => {
        const { docker, dockerIsRunning } = await getDocker_1.default();
        if (!dockerIsRunning)
            return;
        console.log(kleur_1.bold("\nüê∫  Stopping QA Wolf runner service..."));
        // Get a reference to already running runner container if possible
        const { container, isRunning } = await getRunnerContainer_1.default(docker);
        if (container && isRunning) {
            try {
                await container.stop();
            }
            catch (error) {
                console.error(error.message);
                return;
            }
        }
        console.log("\nStopped.\n");
    });
    return command;
};
exports.buildStopCommand = buildStopCommand;
//# sourceMappingURL=stopCommand.js.map