"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.runCli = void 0;
const commander_1 = __importDefault(require("commander"));
const kleur_1 = require("kleur");
const howlCommand_1 = require("./howlCommand");
const startCommand_1 = require("./startCommand");
const stopCommand_1 = require("./stopCommand");
const testCommand_1 = require("./testCommand");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const pkg = require("../../package.json");
commander_1.default.usage("<command> [options]").version(pkg.version);
commander_1.default.addCommand(howlCommand_1.buildHowlCommand());
commander_1.default.addCommand(startCommand_1.buildStartCommand(), { isDefault: true });
commander_1.default.addCommand(stopCommand_1.buildStopCommand());
commander_1.default.addCommand(testCommand_1.buildTestCommand());
commander_1.default.arguments("<command>").action((cmd) => {
    console.log(kleur_1.yellow(`Invalid command "${cmd}"\n`));
    commander_1.default.help();
});
commander_1.default.allowUnknownOption(false);
const runCli = (argv = process.argv) => commander_1.default.parseAsync(argv);
exports.runCli = runCli;
//# sourceMappingURL=index.js.map