import { Browser, BrowserContext, BrowserContextOptions, BrowserType, LaunchOptions } from "playwright";
declare const CONTEXT_OPTIONS: readonly ["bypassCSP", "colorScheme", "deviceScaleFactor", "extraHTTPHeaders", "geolocation", "hasTouch", "httpCredentials", "ignoreHTTPSErrors", "timezoneId", "locale", "permissions", "userAgent", "viewport", "isMobile"];
declare type BrowserName = "chromium" | "firefox" | "webkit";
export declare type QAWolfLaunchOptions = Pick<BrowserContextOptions, typeof CONTEXT_OPTIONS[number]> & {
    browser?: BrowserName;
    headless?: boolean;
};
export declare type LaunchResult = {
    browser: Browser;
    context: BrowserContext;
};
export declare const parseBrowserName: (name?: string) => BrowserName;
export declare const getBrowserType: (browserName: BrowserName) => BrowserType<Browser>;
export declare const getLaunchOptions: (browserName: BrowserName, options?: LaunchOptions) => LaunchOptions;
export declare const launch: (options?: QAWolfLaunchOptions) => Promise<LaunchResult>;
export {};
